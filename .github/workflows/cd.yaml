name: CD
on:
  push:
    branches: [main]
jobs:
  build_on_win:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
      - name: create env-config
        run: |
          echo '{"API_TEF":"${{ secrets.API_TEF }}","ENV":"${{ secrets.ENV }}","API_DASH":"${{ secrets.API_DASH }}","API_TOKEN":"${{ secrets.API_TOKEN }}","NFCe_Token":"${{ secrets.NFCE_Token }}","NFCe_AMBIENTE":"${{ secrets.NFCE_AMBIENTE }}","API_LOG":"${{ secrets.API_LOG }}","API_AUTH":"${{ secrets.API_AUTH }}","CHAT_DASH":"${{ secrets.CHAT_DASH }}","API_SALES_HANDLER":"${{ secrets.API_SALES_HANDLER }}","ELASTIC_SHOULD_LOG":"${{ secrets.ELASTIC_SHOULD_LOG }}","ELASTIC_ID":"${{ secrets.ELASTIC_ID }}","ELASTIC_USER":"${{ secrets.ELASTIC_USER }}","API_MERCURY":"${{ secrets.API_MERCURY }}", "NPS_URL":"${{ secrets.NPS_URL }}", "API_THOR":"${{ secrets.API_THOR }}", "API_S3":"${{ secrets.API_S3 }}", "TOKEN_SECRET_NPS":"${{ secrets.TOKEN_SECRET_NPS }}","ELASTIC_PASS":"${{ secrets.ELASTIC_PASS }}"}' > electron/src/providers/env.json
          echo SKIP_PREFLIGHT_CHECK=true > .env
      - uses: actions/setup-node@master
        with:
          node-version: 16.20.1
      - name: install node tools
        run: npm install --global --production windows-build-tools@4.0.0
      - name: install node-gyp
        run: npm install --global node-gyp@latest
      - name: Set node config to use python2.7
        run: npm config set python python2.7
      - name: Set node config to set msvs_version to 2019
        run: npm config set msvs_version 2019
      - uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64
      - name: Install dependencies
        run: yarn install --network-timeout 600000
      - name: Build Electron
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: yarn electron:build
      - name: Update version
        run: node updateManagerVersion.js
